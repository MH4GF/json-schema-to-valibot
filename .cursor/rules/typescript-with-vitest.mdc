---
description: TypeScript with Vitest
globs: **/*.ts
---

# TypeScript with Vitest Development Rules

## Development Process

1. Test-Driven Development (TDD) is mandatory:
   - Red: Write a failing test
   - Green: Implement minimal code to make the test pass
   - Refactor: Improve the code while keeping tests green

2. Test File Naming Convention:
   - Implementation file: `src/jsonSchemaToValibot.ts`
   - Test file: `src/jsonSchemaToValibot.test.ts`

3. Test Structure:
   ```typescript
   import { describe, it, expect } from 'vitest'

   describe('feature description', () => {
     it('test case description', () => {
       // test code
     })
   })
   ```

4. Code Coverage:
   - Unit tests should cover critical functionality
   - Include boundary value testing
   - Test edge cases thoroughly

5. Test Quality:
   - Each test should be independent
   - Tests should be clear and easy to understand
   - Minimize the use of mocks and stubs

## Best Practices

- Write test cases that serve as documentation for feature specifications
- Break down complex test cases into smaller, focused tests
- Use clear and meaningful test data
- Keep test descriptions descriptive and precise
